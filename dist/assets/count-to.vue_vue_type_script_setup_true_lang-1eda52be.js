import{d as B,r as p,gP as c,p as C,o as E,w as P,v as S,aC as w,aD as D,aJ as F,gQ as N,gR as T,__tla as k}from"./index-2c8f1a32.js";let m,J=Promise.all([(()=>{try{return k}catch{}})()]).then(async()=>{m=B({name:"CountTo",__name:"count-to",props:{startValue:{default:0},endValue:{default:2021},duration:{default:1500},autoplay:{type:Boolean,default:!0},decimals:{default:0},prefix:{default:""},suffix:{default:""},separator:{default:","},decimal:{default:"."},useEasing:{type:Boolean,default:!0},transition:{default:"linear"}},emits:["on-started","on-finished"],setup(_,{emit:o}){const a=_,t=p(a.startValue);let i=c(t);const g=C(()=>h(i.value)),y=p(!1);function V(){i=c(t,{disabled:y,duration:a.duration,onStarted:()=>o("on-started"),onFinished:()=>o("on-finished"),...a.useEasing?{transition:T[a.transition]}:{}})}function r(){V(),t.value=a.endValue}function h(e){if(e!==0&&!e)return"";const{decimals:d,decimal:x,separator:s,suffix:v,prefix:$}=a;let l=Number(e).toFixed(d);l=String(l);const u=l.split(".");let n=u[0];const b=u.length>1?x+u[1]:"",f=/(\d+)(\d{3})/;if(s&&!N(s))for(;f.test(n);)n=n.replace(f,`$1${s}$2`);return $+n+b+v}return E([()=>a.startValue,()=>a.endValue],()=>{a.autoplay&&r()}),P(()=>{t.value=a.startValue}),S(()=>{a.autoplay&&r()}),(e,d)=>(w(),D("span",null,F(g.value),1))}})});export{m as _,J as __tla};
